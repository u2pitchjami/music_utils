import os
from beets_utils.backup import backup_beets_config
from beets_utils.switch_mode import switch_config_to
from beets_utils.commands import run_beet_command
from utils.config import BEETS_MANUAL_LIST
from utils.logger import get_logger

def import_auto(logname = None):
    """
    Lance un import automatique de /app/data apr√®s avoir :
    - sauvegard√© la config Beets
    - activ√© le mode auto
    """
    logger = getLogger(logname + "." + __name__)
    logger.info("üöÄ Lancement import automatique")

    backup = backup_beets_config()
    if not backup:
        logger.warning("‚ö†Ô∏è Sauvegarde config √©chou√©e ou ignor√©e")

    mode = switch_config_to("auto")
    if mode != "auto":
        logger.warning("‚ö†Ô∏è Le switch en mode auto n‚Äôa pas fonctionn√©")

    result = run_beet_command("import", ["/app/data/"], capture_output=False)
    if result is None:
        logger.error("‚ùå L'import automatique a √©chou√©.")
    else:
        logger.info("‚úÖ Import automatique termin√©.")

def import_manuel(clear_after=True, logname = None):
    """
    Importe tous les dossiers list√©s dans BEETS_MANUAL_LIST, un par un, en mode manuel.
    """
    logger = getLogger(logname + "." + __name__)
    logger.info("üöÄ Lancement import manuel")

    backup = backup_beets_config()
    if not backup:
        logger.warning("‚ö†Ô∏è Sauvegarde config √©chou√©e ou ignor√©e")

    mode = switch_config_to("manuel")
    if mode != "manuel":
        logger.warning("‚ö†Ô∏è Le switch en mode manuel n‚Äôa pas fonctionn√©")

    if not BEETS_MANUAL_LIST or not os.path.isfile(BEETS_MANUAL_LIST):
        logger.warning("‚ùå Fichier manuel introuvable ou vide.")
        return

    with open(BEETS_MANUAL_LIST, "r", encoding="utf-8") as f:
        lines = [line.strip() for line in f if line.strip()]

    if not lines:
        logger.info("‚úÖ Aucun dossier √† importer manuellement.")
        return

    for path in lines:
        logger.info(f"üì¶ Import manuel : {path}")
        result = run_beet_command("import", [path], capture_output=False)
        if result is None:
            logger.error(f"‚ùå √âchec import : {path}")
        else:
            logger.info(f"‚úÖ Import termin√© : {path}")

    if clear_after:
        open(BEETS_MANUAL_LIST, "w", encoding="utf-8").close()
        logger.info(f"üßπ Fichier manuel vid√© : {BEETS_MANUAL_LIST}")